//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBPerFrame
// {
//
//   float4x4 inverseView;              // Offset:    0 Size:    64
//   float4x4 inverseProjection;        // Offset:   64 Size:    64
//   float4 eyePos;                     // Offset:  128 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBPerFrame                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// TEXCOORD                 0   xy          1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB2[8], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- input.Position.x; v0.y <- input.Position.y; v0.z <- input.Position.z; 
//   v1.x <- input.Tex.x; v1.y <- input.Tex.y; 
//   v2.x <- input.Color.x; v2.y <- input.Color.y; v2.z <- input.Color.z; v2.w <- input.Color.w; 
//   o1.x <- <main return value>.WorldPos.x; o1.y <- <main return value>.WorldPos.y; o1.z <- <main return value>.WorldPos.z; 
//   o0.x <- <main return value>.Position.x; o0.y <- <main return value>.Position.y; o0.z <- <main return value>.Position.z; o0.w <- <main return value>.Position.w
//
#line 8 "D:\Game-master\HLSL\SkyBox_vs.hlsl"
itof r0.w, l(1)  // r0.w <- output.Position.w
mov r0.xyz, v0.xyzx  // r0.x <- output.Position.x; r0.y <- output.Position.y; r0.z <- output.Position.z

#line 11
itof r1.x, l(1)
mul r2.xyzw, v0.xxxx, cb2[4].xyzw
mul r3.xyzw, v0.yyyy, cb2[5].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v0.zzzz, cb2[6].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, cb2[7].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z; r1.w <- position.w

#line 12
div r1.xyzw, r1.xyzw, r1.wwww
mul r2.xyz, r1.xxxx, cb2[0].xyzx
mul r3.xyz, r1.yyyy, cb2[1].xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r1.xyz, r1.zzzz, cb2[2].xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r1.wwww, cb2[3].xyzx
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- output.WorldPos.x; r1.y <- output.WorldPos.y; r1.z <- output.WorldPos.z

#line 13
mov o0.xyzw, r0.xyzw
mov o1.xyz, r1.xyzx
ret 
// Approximately 21 instruction slots used
